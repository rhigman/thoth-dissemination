# Logic shared between multiple workflows for disseminating one or more works
# (given as an array of work IDs) from Thoth to the specified platform.
name: disseminate

on:
  workflow_call:
    inputs:
      work-id:
        required: true
        type: string
      platform:
        required: true
        type: string

jobs:
  disseminate:
    runs-on: ubuntu-latest
    # container:
    #   image: openbookpublishers/thoth-dissemination:latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     work-id: ${{ fromJSON(inputs.work-ids) }}
    steps:
      - name: Make all platform credentials available to later steps (with names lowercased)
        uses: oNaiPs/secrets-to-env-action@v1.5
        with:
          secrets: ${{ toJSON(secrets) }}
          convert: lower

      - name: Run disseminator using Dockerhub image
        run: |
          if [ ${{inputs.work-id}} == "1" ]; then
            exit 1;
          else
            echo "this is a location" >> ${{ inputs.work-id }};
          fi

      - name: Upload output to artifact
        uses: actions/upload-artifact@v4
        if: contains(fromJSON('["InternetArchive", "CUL", "Figshare", "Zenodo"]'), inputs.platform)
        with:
          name: ${{ inputs.work-id }}
          path: ${{ inputs.work-id }}
          retention-days: 1
          if-no-files-found: ignore
          overwrite: false

  write-locations:
    runs-on: ubuntu-latest
    needs: disseminate
    # if: (success() || failure()) && contains(fromJSON('["InternetArchive", "CUL", "Figshare", "Zenodo"]'), inputs.platform)
    if: contains(fromJSON('["InternetArchive", "CUL", "Figshare", "Zenodo"]'), inputs.platform)
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     work-id: ${{ fromJSON(inputs.work-ids) }}
    steps:
      - name: Download disseminator output artifact containing location info
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.work-id }}

      - name: Fake outcome
        run: echo ${{ inputs.work-id }}

      # - name: Checkout
      #   uses: actions/checkout@v4

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.10'

      # - name: Install dependencies
      #   run: pip install -r requirements_write_locations.txt

      # - name: Write locations to Thoth using Python script
      #   run: python write_locations.py ${{ inputs.work-id }}
      #   env:
      #     THOTH_EMAIL: ${{ secrets.THOTH_EMAIL }}
      #     THOTH_PWD: ${{ secrets.THOTH_PWD }}
